#!/usr/bin/env zsh

meteo () {
    tput reset

    # Constants
    readonly DATE_COLUMN=28
    readonly TIME_COLUMN=17

    # Display time first
    tput cup 0 $TIME_COLUMN
    printf "\033[0;32m\033[7m%s\033[0m" "$(date +"%H:%M")"

    # Store calendar output
    cal_output=$(cal | sed 's/[[:space:]]*$//')  # Remove trailing spaces

    # Print first line of calendar at time level
    tput cup 0 $DATE_COLUMN
    echo "$cal_output" | head -n 1 | while IFS= read -r line; do
        printf "\033[34m%s\033[0m" "$line"
    done

    # Get weather data and print first line
    weather_output=$(curl -s -m 3 "https://wttr.in/YKF?0mf")

    # Start weather at line 1
    tput cup 1 0

    if [[ $weather_output == "Weather report:"* ]]; then
        # Print first line of weather without newline
        printf " %s" "$(echo "$weather_output" | head -n 1)"

        # Print remaining weather lines
        echo "$weather_output" | tail -n +2

        # Print remaining calendar lines
        tput cup 1 $DATE_COLUMN
        echo "$cal_output" | tail -n +2 | while IFS= read -r line; do
            if [[ $line =~ ^[[:space:]]*[0-9] ]]; then
                # Process calendar number lines
                today=$(date +%-d)

                # Split and format numbers, excluding trailing zeros
                echo "$line" | tr -s ' ' | sed 's/^ *//' | tr ' ' '\n' | \
                while read -r num; do
                    if [[ $num =~ ^[0-9]+$ ]]; then  # Only process valid numbers
                        if [[ $num == $today ]]; then
                            printf "\033[0;32m\033[7m%2d\033[0m\033[34m " "$num"
                        else
                            printf "\033[34m%2d " "$num"
                        fi
                    fi
                done
                echo
            else
                # Print header lines in blue
                printf "\033[34m%s\033[0m\n" "$line"
            fi
            tput cuf $DATE_COLUMN
        done
    else
        printf "+=====================+
|                     |
|                     |
| Weather Unavailable |
|                     |
|                     |
+=====================+\n"

        # Print remaining calendar lines after weather unavailable message
        tput cup 1 $DATE_COLUMN
        echo "$cal_output" | tail -n +2 | while IFS= read -r line; do
            if [[ $line =~ ^[[:space:]]*[0-9] ]]; then
                today=$(date +%-d)
                echo "$line" | tr -s ' ' | sed 's/^ *//' | tr ' ' '\n' | \
                while read -r num; do
                    if [[ $num =~ ^[0-9]+$ ]]; then
                        if [[ $num == $today ]]; then
                            printf "\033[0;32m\033[7m%2d\033[0m\033[34m " "$num"
                        else
                            printf "\033[34m%2d " "$num"
                        fi
                    fi
                done
                echo
            else
                printf "\033[34m%s\033[0m\n" "$line"
            fi
            tput cuf $DATE_COLUMN
        done
    fi

    printf "\n"
}

# ^ 2023-05-18T13:07:04-0500\
# % 2024-12-08T23:17:09-0500
